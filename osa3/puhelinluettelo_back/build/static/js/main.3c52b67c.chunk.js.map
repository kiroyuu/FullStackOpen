{"version":3,"sources":["components/Number.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","serviceWorker.js","index.js"],"names":["Number","name","number","handleDelete","onClick","Persons","persons","filter","personsToShow","person","toLowerCase","includes","map","key","id","Filter","value","onChange","PersonForm","addNumber","newName","nameChange","newNum","numChange","onSubmit","type","Notification","message","style","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNum","newFilter","setNewFilter","errorMessage","setErrorMessage","setStyle","useEffect","numService","initialNums","catch","error","console","log","event","target","preventDefault","findIndex","numObject","returnedNum","concat","setTimeout","window","confirm","find","returnedPerson","updated","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c52b67c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Number = ({ name, number, handleDelete }) => {\r\n  return (\r\n  <div>{name} {number} <button onClick={handleDelete}>delete</button></div>\r\n  )\r\n}\r\n\r\nexport default Number","import React from 'react'\r\nimport Number from './Number'\r\n\r\nconst Persons = ({ persons, filter, handleDelete }) => {  \r\n        let personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n        const rows = () => personsToShow.map(person =>\r\n            <Number\r\n            key={person.name}\r\n            name={person.name}\r\n            number = {person.number}\r\n            handleDelete = {() => handleDelete(person.id)}\r\n            />\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                {rows()}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n        Filter shown with\r\n        <input \r\n          value = {value}\r\n          onChange = {onChange}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addNumber, newName, nameChange, newNum, numChange}) => {\r\n   return (\r\n    <form onSubmit={addNumber}>\r\n            <div>name: <input value={newName} onChange={nameChange}/></div>\r\n            <div>number: <input value={newNum} onChange={numChange}/></div>\r\n            <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n   )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message, style }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={style}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport numService from './services/persons'\n\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('') \n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [style, setStyle] = useState(null)\n\n  useEffect(() => {\n    numService\n      .getAll()\n        .then(initialNums => {\n          setPersons(initialNums)\n      })\n      .catch(error => {\n        console.log(\"Something went wrong.\")\n      })\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    if (persons.findIndex(person => person.name === newName) < 0) {\n      const numObject = {\n        name: newName, \n        number: newNum\n      }\n\n      numService\n        .create(numObject)\n          .then(returnedNum => {\n            setPersons(persons.concat(returnedNum))\n            setNewName('')\n            setNewNum('')\n            setErrorMessage(\n              `${numObject.name} has been added.`\n            )\n            setStyle(\n              \"add\"\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(\n            error.response.data.error\n          )\n          //console.log(error.response.data)\n          setStyle(\n            \"error\"\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n    else if (window.confirm(`${newName} has already been added to phonebook, replace the old number with a new one?`)) {\n      const numObject = {\n        name: newName,\n        number: newNum\n      }\n      const id = persons.find(person => person.name === newName).id\n      numService\n        .update(id, numObject)\n        .then(returnedPerson => {\n          setNewName('')\n          setNewNum('')\n          setErrorMessage(\n          `${returnedPerson.name} has been updated.`)     \n          setStyle(\"add\")\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        \n          const updated = persons.map(person => person.id !== id ? person : returnedPerson)\n          setPersons(updated)\n            \n        }) \n      }\n  }\n\n  const handleDelete = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      numService\n        .deletePerson(person.id)\n        .catch(error => {\n          setErrorMessage(\n            `${person.name} has already been deleted.`\n          )\n          setStyle(\n            \"error\"\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          },5000)\n        })\n      setErrorMessage(\n        `${person.name} has been deleted.`\n      )\n      setPersons(persons.filter(person => person.id !== id))\n      setStyle(\n        \"add\"\n      )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n    }\n    \n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    console.log(event.target.value)\n    setNewNum(event.target.value)\n  }\n\n  const handleNewFilter = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} style={style}/>\n      <Filter \n        value = {newFilter}\n        onChange={handleNewFilter}\n      />\n      <h3>Add a new</h3>\n      <PersonForm \n        addNumber = {addNumber}\n        newName = {newName}\n        nameChange = {handleNameChange}\n        newNum = {newNum}\n        numChange = {handleNumChange}\n      />\n      <h3>Numbers</h3>\n        <Persons persons={persons} filter={newFilter} handleDelete={handleDelete}/>\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}